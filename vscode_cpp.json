{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	"main function for lexiaoxia": {
		"prefix": "main",
		"body": [
			"#include <iostream> \n"
			"using namespace std; \n" 
			"int main()"
			"{"
			"\t$1"
			"\tcout << \"hello\" << endl;"
			"\treturn 0;"
			"}"
		],
		"description":  "main function for lexiaoxia"
	},
	"class for lexiaoxia": {
		"prefix": "class",
		"body": [
			"#pragma once"
			"#include <iostream> \n"
			"using namespace std; \n"
			"class $1 \n{\npublic:\n\t$1()\n\t{\n\t\t$2\n\t}"
			"\n\t$1(const $1 & $3)\n\t{\n\t\t$4\n\t}"
			"\n\t~$1()\n\t{\n\t\t$5\n\t}\n\npublic:\n\t$6\n\n};"
		],
		"description":  "class for lexiaoxia"
	},
	"struct for lexiaoxia": {
		"prefix": "struct",
		"body": [
			"struct $1\n{\n\t\n};"
		],
		"description":  "struct for lexiaoxia"
	},
	"cout for lexiaoxia": {
		"prefix": "cout",
		"body": [
			"cout << $1 << endl;"
		],
		"description":  "cout for lexiaoxia"
	},
	"cin for lexiaoxia": {
		"prefix": "cin",
		"body": [
			"cin >> $1;"
		],
		"description":  "cin for lexiaoxia"
	},
	"cmake for lexiaoxia": {
		"prefix": "cmake",
		"body": [
			"cmake_minimum_required(VERSION 3.10.2)"
			"project($1)"
			"add_executable($1 $2)"
		],
		"description":  "cmake for lexiaoxia"
	}

}